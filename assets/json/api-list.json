[{"name":"po-code-editor-register","types":["portinari-angular"],"type":"components","title":"Po Code Editor Register","module":"po-code-editor-register","path":"/projects/code-editor/src/lib/components/po-code-editor/po-code-editor-register.service.ts","preview":"Wrapper para registro de sintaxes customizadas para o po-code-editor.\n\nPara utilização do serviço de idiomas **PoCodeEditorRegister**,\ndeve-se importar o módulo PoCodeEditorModule mesmo já tendo importado\no módulo PoModule.\nNa importação opcionalmente pode ser invocado o método **forRegister** informando um objeto para configuração.\n\nExemplo de configuração:\n```\nimport { PoCodeEditorModule, PoCodeEditorRegisterable } from '@portinari/portinari-code-editor';\n\nconst customEditor: PoCodeEditorRegisterable = {\n  language: 'terraform'\n  options: {\n    keywords: ['resource', 'provider', 'variable', 'output', 'module', 'true', 'false'],\n    operators: ['{', '}', '(', ')', '[', ']', '?', ':'],\n    symbols:  /[=><!~?:&|+\\-*\\/\\^%]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    tokenizer: {\n     ...\n    }\n  }\n};\nAs configurações para o registro de uma nova sintaxe no Monaco code editor podem ser encontradas em\n[**Monaco Editor**](https://microsoft.github.io/monaco-editor/playground.html#extending-language-services-custom-languages).\n\n@NgModule({\n  declarations: [],\n  imports: [\n    PoModule,\n    PoCodeEditorModule.forRegister(customEditor)\n  ],\n  bootstrap: [AppComponent]\n})\n```","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-code-editor","types":["portinari-angular"],"type":"components","title":"Po Code Editor","module":"po-code-editor","path":"/projects/code-editor/src/lib/components/po-code-editor/po-code-editor.component.ts","preview":"O `po-code-editor` é um componente para edição de código fonte baseado no Monaco Editor da Microsoft.\n\nSendo assim, algumas configurações presentes no Monaco podem ser utilizadas aqui, como a escolha da liguagem\n(utilizando o highlight syntax específico), escolha do tema e opção de diff, além de ser muito similar ao Visual\nStudio Code, com autocomplete e fechamento automático de brackets.\n\nEste componente pode ser usado em qualquer situação que necessite de adição de códigos, como por exemplo, criar\nreceitas utilizando Terraform para gerenciar topologias.\nÉ importante ressaltar que este não é um componente para edição de textos comuns.\n\nO [(ngModel)] deve ser usado para manipular o conteúdo do po-code-editor, ou seja, tanto para incluir um conteúdo quanto\npara recuperar o conteúdo do po-code-editor, utiliza-se uma variável passada por [(ngModel)].\n\n> Não esqueça de fazer a instalação do pacote `@portinari/portinari-code-editor` em sua aplicação.\n>\n> ```\n> npm i --save @portinari/portinari-code-editor\n> ```\n>\n> Adicionar o módulo `PoCodeEditorModule` em seu projeto:\n>\n> ```\n> // app.module.ts\n> ...\n> import { PoModule } from '@portinari/portinari-ui';\n> import { PoCodeEditorModule } from '@portinari/portinari-code-editor';\n> ...\n> @NgModule({\n>   imports: [\n>     ...\n>     PoModule,\n>     PoCodeEditorModule\n>   ],\n>   ...\n> })\n> export class AppModule { }\n> ```\n>\n> E adicionar um *asset* ao arquivo `angular.json`, conforme exemplo abaixo:\n>\n> <pre ngNonBindable>\n> \"assets\": [\n>    { \"glob\": \"&#8727;&#8727;/&#8727;\", \"input\": \"node_modules/monaco-editor/min\", \"output\": \"/assets/monaco/\" }\n>  ]\n> </pre> ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-storage","types":["portinari-angular"],"type":"services","title":"Po Storage","module":"po-storage","path":"/projects/storage/src/lib/services/po-storage.service.ts","preview":"O PO Storage é uma biblioteca que fornece um serviço para armazenamento de dados no dispositivo local, sendo semelhante\nao funcionamento do [IonicStorage](https://ionicframework.com/docs/storage/).\nPossilitando armazenar os dados no [Websql](https://dev.w3.org/html5/webdatabase/), [Indexeddb](https://www.w3.org/TR/IndexedDB/)\nou no [LocalStorage](https://html.spec.whatwg.org/multipage/webstorage.html).\n\nA estrutura utilizada para armazenar os dados é a de chave/valor, onde uma chave funciona como um identificador exclusivo.\n\nPara utilizá-lo é necessário importar o módulo `PoStorageModule` no módulo da sua aplicação, por exemplo:\n\n```typescript\nimport { PoStorageModule } from '@portinari/portinari-storage';\n\n@NgModule({\n declarations: [...],\n imports: [\n   // Importação do módulo PoStorageModule\n   PoStorageModule.forRoot(),\n ],\n bootstrap: [IonicApp],\n entryComponents: [...],\n providers: [...]\n})\nexport class AppModule {}\n```\n\nApós a declaração de módulo, é criada uma base de dados no armazenamento local e o serviço `PoStorageService` estará\npronto para ser utilizada na sua aplicação.\n\n#### Configurando as opções de armazenamento\n\nNa importação do módulo, o método `PoStorageModule.forRoot()` pode receber como parâmetro um objeto do tipo\n[`PoStorageConfig`](documentation/po-storage#po-storage-config),\nque serve para configurar as opções personalizadas do armazenamento, como por exemplo: o tipo de armazenamento\npreferêncial.\n\nExemplo de utilização:\n\n```typescript\nimport { PoStorageModule } from '@portinari/portinari-storage';\n\n@NgModule({\n declarations: [...],\n imports: [\n   // Importação do módulo PoStorageModule com a configuração personalizada\n   PoStorageModule.forRoot({\n     name: 'mystorage',\n     storeName: '_mystore',\n     driverOrder: ['websql', 'indexeddb', 'localstorage']\n   }),\n ],\n bootstrap: [IonicApp],\n entryComponents: [...],\n providers: [...]\n})\nexport class AppModule {}\n```","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-data-transform","types":["portinari-angular"],"type":"models","title":"Po Data Transform","module":"po-data-transform","path":"/projects/sync/src/lib/models/po-data-transform.model.ts","preview":"Classe responsável por adaptar dados de APIs que não seguem\no padrão de [API da PORTINARI](http://tdn.totvs.com/pages/releaseview.action?pageId=271660444).\n\nEssa classe deve ser estendida por uma classe que implemente cada um de seus métodos, adaptando os parâmetros de\nacordo com a API do *backend* existente que se deseja comunicar.","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-entity","types":["portinari-angular"],"type":"models","title":"Po Entity","module":"po-entity","path":"/projects/sync/src/lib/models/po-entity/po-entity.model.ts","preview":"Uma instância `PoEntity` representa um *schema* e ela contém métodos que possibilitam manipular seus registros,\ncomo por exemplo: buscar, criar e remover.\n\nEsta instância pode ser obtida a partir do retorno do método `PoSyncService.getModel('schema name')`.","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-event-sourcing-error-response","types":["portinari-angular"],"type":"models","title":"Po Event Sourcing Error Response","module":"po-event-sourcing-error-response","path":"/projects/sync/src/lib/models/po-event-sourcing-error-response.model.ts","preview":"Classe que define a resposta de erro para um item da fila de eventos que não foi enviado ao servidor por\nalguma inconsistência.\n\n> Pode ser utilizada em casos onde um item da fila é enviado ao servidor com inconsistência nos dados, por exemplo\numa operação de *delete* ou *update* sem o `id` do objeto.","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-network-status","types":["portinari-angular"],"type":"models","title":"Po Network Status","module":"po-network-status","path":"/projects/sync/src/lib/models/po-network-status.model.ts","preview":"Classe responsável por identificar a conexão de rede disponível no dispositivo.","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-query-builder","types":["portinari-angular"],"type":"models","title":"Po Query Builder","module":"po-query-builder","path":"/projects/sync/src/lib/models/po-query-builder/po-query-builder.model.ts","preview":"Classe utilitária para construir consultas sobre os registros de um *schema*.\n\nA utilização dos métodos desta classe é feita a partir do retorno do método `PoEntity.find()`. Por exemplo,\npara utilizar o método `PoQueryBuilder.page()`, é necessário:\n\n``` typescript\nPoSyncService.getModel('schema name').find().page(2).exec();\n```\n\nO `PoQueryBuilder` foi projetado para que os seus métodos sejam\nchamados em cascata e ao final desse encadeamento invocar o método\n`PoQueryBuilder.exec()` para que a busca seja concluída. Por exemplo:\n\n``` typescript\nPoSyncService\n  .getModel('schema name')\n  .find()\n  .page(2)\n  .pageSize(5)\n  .sort()\n  .exec();\n```","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-notification","types":["portinari-angular"],"type":"services","title":"Po Notification","module":"po-notification","path":"/projects/ui/src/lib/services/po-notification/po-notification.service.ts","preview":"Serviço responsável por emitir as notificações em uma página. São disponibilizados os métodos de:\n\n- success,\n- warning,\n- error,\n- information.\n\nCada um destes métodos recebe como parâmetro o objeto \"PoNotification\" que contém os dados da mensagem e o\nobjeto ViewContainerRef que é a representação do container do componente onde será criada a notificação.\n\nEstas notificações serão exibidas durante 10 segundos, após este tempo a mesma é removida automaticamente. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-network","types":["portinari-angular"],"type":"services","title":"Po Network","module":"po-network","path":"/projects/sync/src/lib/services/po-network/po-network.service.ts","preview":"O `PoNetworkService` é utilizado para verificar o status e o tipo da conexão de rede do dispositivo.","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-i18n","types":["portinari-angular"],"type":"services","title":"Po I18n","module":"po-i18n","path":"/projects/ui/src/lib/services/po-i18n/po-i18n.service.ts","preview":"O serviço `PoI18nService` possibilita utilizar múltiplos idiomas e contextos na aplicação.\n\n> Antes da utilização do serviço, é necessário realizar a\n[importação e configuração do módulo `PoI18nModule`](/documentation/po-i18n#i18n-config).\n\n**Utilização do serviço `PoI18nService`:**\n\nPara utilizar o serviço basta importá-lo nos componentes que necessitarem de literais e fazer a injeção de\ndependência no construtor:\n```\n import { PoI18nService } from '@portinari/portinari-ui';\n ...\n constructor(private poI18nService: PoI18nService) { }\n ...\n```\n\nPor fim realizar a busca pelas literais, inscrevendo-se no [Observable](https://angular.io/guide/observables) pelo\nmétodo `getLiterals()`.\n\n> O método `getLiterals()` pode receber um objeto do tipo da interface `PoI18nLiterals` como parâmetro,\nporém, nenhuma das propriedades são obrigatórias. Caso nenhum parâmetro seja passado, serão buscadas\ntodas as literais do contexto definido com padrão, no idioma definido como padrão.\n\nExemplos de requisição:\n```\nliterals = {};\nliteralsEn = {};\nliteralsCrm = {};\n\nconstructor(private poI18nService: PoI18nService) {\n  poI18nService.getLiterals()\n    .subscribe((literals) => {\n      this.literals = literals;\n    });\n\n  poI18nService.getLiterals({context: 'crm', literals: ['add', 'remove']})\n    .subscribe((literals) => {\n      this.literalsCrm = literals;\n    });\n\n  poI18nService.getLiterals({language: 'en-us'})\n    .subscribe((literals) => {\n      this.literalsEn = literals;\n    });\n}\n```\n\nPara apresentar as literais capturadas acima no HTML do componente, deve-se utilizar o\nseguinte código:\n\n<pre ngNonBindable>\n{{ literals?.add }}\n{{ literals?.remove }}\n</pre>\n\nCaso as literais contenham variáveis que precisem ser substituídas, pode-se utilizar o *pipe* `poI18n`.\nÉ possível informar propriedades do componente como `name` e `nickname` ou\ninformar o valor diretamente com \"\" ou número, conforme o exemplo abaixo:\n\n<pre ngNonBindable>\n{{ literals?.people | poI18n:[120] }}\n{{ literals?.greeting | poI18n:[name, nickname] }}\n{{ literals?.greeting | poI18n:[\"Brad\", \"Green\"] }}\n</pre>\n\n> É importante o uso do operador `?` (Elvis) para evitar erros enquanto as literais não forem carregadas.\n\n### Teste unitário\n\nAbaixo segue um exemplo de *setup* inicial de teste unitário do *AppComponent* que utiliza o `PoI18nService`:\n\n```\nimport { async, TestBed } from '@angular/core/testing';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\n\nimport { PoI18nModule } from '@portinari/portinari-ui';\n\nimport { AppComponent } from './app.component';\n\ndescribe('AppComponent', () => {\n  const anotherPT = {\n    text: 'texto',\n    add: 'adicionar',\n    remove: 'remover'\n  };\n\n  const generalPT = {\n    text: 'texto',\n    add: 'adicionar',\n    remove: 'remover'\n  };\n\n  const config = {\n    default: {\n      language: 'pt-BR',\n      context: 'general',\n      cache: false\n    },\n    contexts: {\n      general: {\n        'pt-br': generalPT\n      },\n      another: {\n        'pt-br': anotherPT\n      }\n    }\n  };\n\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n      declarations: [\n        AppComponent\n      ],\n      imports: [\n        HttpClientTestingModule,\n        PoI18nModule.config(config)\n      ]\n    }).compileComponents();\n  }));\n\n  it('should create the app', async(() => {\n    const fixture = TestBed.createComponent(AppComponent);\n    const app = fixture.debugElement.componentInstance;\n\n    expect(app).toBeTruthy();\n  }));\n\n});\n``` ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-sync","types":["portinari-angular"],"type":"services","title":"Po Sync","module":"po-sync","path":"/projects/sync/src/lib/services/po-sync/po-sync.service.ts","preview":"O `PoSyncService` é utilizado para configurar toda a base de dados que receberá as informações que serão\narmazenadas *offline* vindas do servidor. Nele ocorre toda a preparação dos modelos de dados retornados por\ncada consulta.","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-modal-password-recovery","types":["portinari-angular"],"type":"components","title":"Po Modal Password Recovery","module":"po-modal-password-recovery","path":"/projects/templates/src/lib/components/po-modal-password-recovery/po-modal-password-recovery.component.ts","preview":"O componente `po-modal-password-recovery` é utilizado como template para solicitação de troca de senha.\n\nÉ composto por uma modal que possui três telas, cada uma com as seguintes características:\n\n- A primeira possui campos para preenchimento de email ou número de telefone;\n- Tela com campo para preenchimento de código SMS enviado para o número de telefone enviado;\n- A terceira se trata de uma confirmação de envio de link para a caixa de email do usuário.\n\n\nA propriedade `p-url-recovery` automatiza a rotina do componente e simplifica o processo\npara recuperação de senha, bastando definir uma url para requisição dos recursos.\nSeu detalhamento para uso pode ser visto logo abaixo em *propriedades*.\nCaso julgue necessário, pode-se também definir manualmente a rotina do componente.\n\n\nPara a modal de digitação de código SMS, é possível definir uma mensagem de erro\ncustomizada com a propriedade `p-code-error` e há um link para\nreenvio de código por SMS. Ao reenviar, o evento `p-code-submit` envia um objeto com o telefone do usuário e a quantidade\nde vezes em que o usuário fez a solicitação de reenvio.\n\n> É indicada a utilização da tela de digitação para envio de código SMS apenas\nse a opção por envio SMS for disponibilizada para o usuário.\n\n\nA modal de confirmação contém uma ação de reenvio e o evento `p-submit`\né quem passa o objeto contendo o email em conjunto com a quantidade de tentativas de reenvio.\n\n> A tela de confirmação é indicada para quando o usuário solicitar a troca através do email.\n\n> Os textos das modals são pré-definidos, imutáveis e são traduzidos de acordo com o idioma do *browser* (pt, en e es)\n\nPara que as imagens sejam exibidas corretamente, é necessário incluir o caminho delas ao projeto. Para isso, edite\no *assets* no arquivo **angular.json** da aplicação na seguinte ordem:\n```\n  \"assets\": [\n    \"src/assets\",\n    \"src/favicon.ico\",\n    {\n      \"glob\": \"**\\/*\",\n      \"input\": \"node_modules/@portinari/style/images\",\n      \"output\": \"assets/images\"\n    }\n  ]\n``` ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-dialog","types":["portinari-angular"],"type":"services","title":"Po Dialog","module":"po-dialog","path":"/projects/ui/src/lib/services/po-dialog/po-dialog.service.ts","preview":"O po-dialog é um serviço para exibição de caixas de diálogo, é possível customiza-los passando alguns parâmetros de acordo com a\nnecessidade do desenvolvedor. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-page-blocked-user","types":["portinari-angular"],"type":"components","title":"Po Page Blocked User","module":"po-page-blocked-user","path":"/projects/templates/src/lib/components/po-page-blocked-user/po-page-blocked-user.component.ts","preview":"O componente `po-page-blocked-user` é utilizado como template para tela de bloqueio de usuário.\nÉ possível definir entre três tipos de telas para alertar o usuário sobre um eventual bloqueio de login.\n\nCada modelo de bloqueio possui uma imagem e texto adequados à situação.\nOs textos das telas são pré-definidos e imutáveis, porém,\né possível estipular parâmetros como dias, horas e tentativas de acesso esgotadas.\n\nPor fim, há propriedades para adição de telefone e/ou email para contato e também a definição para a url de retorno.\n\nPara que as imagens sejam exibidas corretamente, é necessário incluir o caminho delas ao projeto. Para isso, edite\no *assets* no arquivo **angular.json** da aplicação na seguinte ordem:\n```\n  \"assets\": [\n    \"src/assets\",\n    \"src/favicon.ico\",\n    {\n      \"glob\": \"**\\/*\",\n      \"input\": \"node_modules/@portinari/style/images\",\n      \"output\": \"assets/images\"\n    }\n  ]\n```\n\n_______________\n\n#### Praticidade\nO `po-page-blocked-user`, assim como suas propriedades, pode também ser transmitido diretamente pelas configuraçãos de rota e,\ndesta maneira, dispensa-se qualquer menção e/ou importação no restante da aplicação. O exemplo abaixo exemplifica\na forma dinâmica com a qual o template pode ser gerado se navegasse para uma rota denominada como `/access-denied`:\n\n\n```\n  import { PoPageBlockedUserComponent, PoPageBlockedUserReason } from '@portinari/portinari-templates';\n\n  ...\n  const routes: Routes = [\n    {\n      path: 'access-denied', component: PoPageBlockedUserComponent, data: {\n        contactEmail: 'dev.portinari@portinari.com',\n        contactPhone: '0800 1234 000',\n        reason: PoPageBlockedUserReason.ExpiredPassword,\n        urlBack: '/home'\n      }\n    }\n    ...\n  ];\n\n  @NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n  })\n  export class AppRoutingModule { }\n```\n\n> É essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-page-change-password","types":["portinari-angular"],"type":"components","title":"Po Page Change Password","module":"po-page-change-password","path":"/projects/templates/src/lib/components/po-page-change-password/po-page-change-password.component.ts","preview":"O componente `po-page-change-password` é utilizado como template para tela de cadastro ou alteração de senha.\n\nApresenta dicas e regras para senhas mais seguras e também possibilidade de personalizar o redirecionamento para as telas\n'esqueceu a senha', 'voltar' e 'entrar no sistema'. Os textos das telas são pré-definidos e imutáveis.\n\nA propriedade `p-url-new-password` automatiza a rotina do template e simplifica o processo de cadastro/alteração de senha, bastando\ndefinir uma url para POST das informações digitadas pelo usuário.  A flexibilidade e praticidade podem chegar a um nível em que o\ndesenvolvimento da aplicação no *client side* é desprovida de qualquer código-fonte relacionado à rotina de cadastro/alteração de senha.\nSeu detalhamento para uso pode ser visto logo abaixo em *propriedades*.\nCaso julgue necessário, pode-se também definir manualmente a rotina do componente.\n\nPara que as imagens sejam exibidas corretamente, é necessário incluir o caminho delas ao projeto. Para isso, edite\no *assets* no arquivo **angular.json** da aplicação na seguinte ordem:\n```\n  \"assets\": [\n    \"src/assets\",\n    \"src/favicon.ico\",\n    {\n      \"glob\": \"**\\/*\",\n      \"input\": \"node_modules/@portinari/style/images\",\n      \"output\": \"assets/images\"\n    }\n  ]\n``` ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-page-dynamic-detail","types":["portinari-angular"],"type":"components","title":"Po Page Dynamic Detail","module":"po-page-dynamic-detail","path":"/projects/templates/src/lib/components/po-page-dynamic-detail/po-page-dynamic-detail.component.ts","preview":"O `po-page-dynamic-detail` é uma página que serve para exibir registros em detalhes,\no mesmo também suporta metadados conforme especificado na documentação.","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-page-dynamic-edit","types":["portinari-angular"],"type":"components","title":"Po Page Dynamic Edit","module":"po-page-dynamic-edit","path":"/projects/templates/src/lib/components/po-page-dynamic-edit/po-page-dynamic-edit.component.ts","preview":"O `po-page-dynamic-edit` é uma página que pode servir para editar ou criar novos registros,\no mesmo também suporta metadados conforme especificado na documentação.","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-page-dynamic-search","types":["portinari-angular"],"type":"components","title":"Po Page Dynamic Search","module":"po-page-dynamic-search","path":"/projects/templates/src/lib/components/po-page-dynamic-search/po-page-dynamic-search.component.ts","preview":"Componente com as ações de pesquisa já definidas, bastando que o desenvolvedor implemente apenas a chamada para as APIs\ne exiba as informações. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-page-dynamic-table","types":["portinari-angular"],"type":"components","title":"Po Page Dynamic Table","module":"po-page-dynamic-table","path":"/projects/templates/src/lib/components/po-page-dynamic-table/po-page-dynamic-table.component.ts","preview":" O `po-page-dynamic-table` é uma página que exibe uma lista de registros em uma tabela baseado em uma lista de fields,\no mesmo também suporta metadados conforme especificado na documentação.","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-page-job-scheduler","types":["portinari-angular"],"type":"components","title":"Po Page Job Scheduler","module":"po-page-job-scheduler","path":"/projects/templates/src/lib/components/po-page-job-scheduler/po-page-job-scheduler.component.ts","preview":"O `po-page-job-scheduler` é uma página para criação e atualização do *Job Scheduler* de forma simplificada, apenas informando\no serviço (endpoint) para consumo, sem a necessidade de criar componentes e tratamentos dos dados. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-http-request-interceptor","types":["portinari-angular"],"type":"interceptors","title":"Po Http Request Interceptor","module":"po-http-request-interceptor","path":"/projects/ui/src/lib/interceptors/po-http-request/po-http-request-interceptor.service.ts","preview":"O serviço Portinari Http Request Interceptor realiza a contabilização de requisições pendentes na aplicação.\n\nExiste a possibilidade de não efetuar a contabilização das requisições pendentes, utilizando o parâmetro\n`X-Portinari-No-Count-Pending-Requests`. Para isso deve ser informado no cabeçalho da requisição com o valor `'true'`,\npor exemplo:\n\n```\n...\n const headers = { 'X-Portinari-No-Count-Pending-Requests': 'true' };\n\n this.http.get(`/customers/1`, { headers: headers });\n...\n\n```\nPara obter a quantidade de requisições pendentes, deve inscrever-se no método `getCountPendingRequests` do\nserviço `PoHttpRequestInterceptorService`, com isso, ao realizar requisições utilizando `HttpClient`,\nserá retornado a quantidade de requisições pendentes.\n\nTambém existe a possibildade de travar a tela e mostrar uma imagem de _loading_ durante o processamento de uma requisição\ndeve-se passar o parâmetro `X-Portinari-Screen-Lock` no cabeçalho da requisição com valor `'true'`.\n\npor exemplo:\n\n```\n...\n const headers = { 'X-Portinari-Screen-Lock': 'true' };\n\n this.http.get(`/customers/1`, { headers: headers });\n...\n\n```\n> Após a validação no interceptor, o parâmetro será removido do cabeçalho da requisição.\n\nAo importar o módulo `PoModule` na aplicação, o `po-http-request-interceptor` é automaticamente configurado sem a necessidade\nde qualquer configuração extra.\n\n\nSegue abaixo um exemplo de uso:\n\n```\nimport { HttpClient } from '@angular/common/http';\n\n...\n\n@Injectable()\nexport class CustomersService {\n\n headers = { 'X-Portinari-No-Count-Pending-Requests': true, 'X-Portinari-Screen-Lock': 'true' }\n pendingRequests: number = 0;\n subscription: Subscription;\n\n constructor(\n   private http: HttpClient,\n   private httpRequestInterceptor: PoHttpRequestInterceptorService) { }\n\n ngOnDestroy(): void {\n   this.subscription.unsubscribe();\n }\n\n ngOnInit(): void {\n   this.subscription = this.httpRequestInterceptor.getCountPendingRequests().subscribe(data => {\n     this.pendingRequests = data;\n   });\n }\n\n getCustomers() {\n   return this.http.get(`/customers/1`, { headers: headers });\n }\n\n ...\n\n}\n```","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-http-interceptor","types":["portinari-angular"],"type":"interceptors","title":"Po Http Interceptor","module":"po-http-interceptor","path":"/projects/ui/src/lib/interceptors/po-http-interceptor/po-http-interceptor.service.ts","preview":"O serviço Portinari Http Interceptor realiza o tratamento de requisições HTTP conforme o padrão do\n[**Guia de implementação das APIs TOTVS**](http://tdn.totvs.com/pages/viewpage.action?pageId=484701395) para adaptá-lo\nao modelo do PO.\n\nAo analisar o objeto `_messages` retornado pela requisição, o serviço exibirá notificações com mensagens na tela.\nOs retornos de erros com códigos 4xx e 5xx são tratados automaticamente, sem a necessidade de incluir o `_messages`.\n\nTambém existe a possibilidade de não apresentar a notificação quando houver algum erro com códigos 4xx e 5xx,\nutilizando o parâmetro `X-Portinari-No-Error` que foi definido conforme o\n[**Guia de implementação das APIs TOTVS**](http://tdn.totvs.com/pages/viewpage.action?pageId=484701395) (em Cabeçalhos Customizados).\nO parâmetro `X-Portinari-No-Error` deve ser informado no cabeçalho da requisição com o valor `'true'` para funcionar corretamente,\npor exemplo:\n\n```\n...\n const headers = { 'X-Portinari-No-Error': 'true' };\n\n this.http.get(`/customers/1`, { headers: headers });\n...\n\n```\n> Após a validação no interceptor, o parâmetro será removido do cabeçalho da requisição.\n\nO `Content-Type` deve ser `application/json` e a estrutura de mensagem recebida pelo serviço deve seguir o\n[**Guia de implementação das APIs TOTVS**](http://tdn.totvs.com/pages/viewpage.action?pageId=484701395)\n(em Mensagens de sucesso para coleções), exemplo:\n - _messages: lista de mensagens de erro ou informativo resultante do serviço.\n   - type: success, warning, error, e information;\n   - code: título ou código da mensagem;\n   - message: texto da mensagem;\n   - detailedMessage: detalhamento do erro ou informativo;\n\nAo importar o módulo `PoModule` na aplicação, o `po-http-interceptor` é automaticamente configurado sem a necessidade\nde qualquer configuração extra.\n\nAo realizar requisições utilize o `HttpClient`, conforme exemplo abaixo:\n\n```\nimport { HttpClient } from '@angular/common/http';\n\n...\n\n@Injectable()\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  getUsers() {\n    return this.http.get('/api/users');\n  }\n\n  ...\n\n}\n``` ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-page-login","types":["portinari-angular"],"type":"components","title":"Po Page Login","module":"po-page-login","path":"/projects/templates/src/lib/components/po-page-login/po-page-login.component.ts","preview":"O componente `po-page-login` é utilizado como template para tela de login.\nCom ele é possível definirmos valores para usuário, senha e definir ações para recuperação de senha e gravação de dados do usuário.\nTambém é possível inserir uma imagem em conjunto com um texto de destaque.\n\n\nA propriedade `p-authentication-url` automatiza a rotina do componente e simplifica o processo para autenticação do usuário, bastando\ndefinir uma url para requisição da autenticação. A flexibilidade e praticidade podem chegar a um nível em que o desenvolvimento\nda aplicação no *client side* é desprovida de qualquer código-fonte relacionado à rotina de login de usuário.\nSeu detalhamento para uso pode ser visto logo abaixo em *propriedades*.\nCaso julgue necessário, pode-se também definir manualmente a rotina do componente.\n\n\nPara que as imagens sejam exibidas corretamente, é necessário incluir o caminho delas ao projeto. Para isso, edite\no *assets* no arquivo **angular.json** da aplicação na seguinte ordem:\n```\n  \"assets\": [\n    \"src/assets\",\n    \"src/favicon.ico\",\n    {\n      \"glob\": \"**\\/*\",\n      \"input\": \"node_modules/@portinari/style/images\",\n      \"output\": \"assets/images\"\n    }\n  ]\n``` ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-avatar","types":["portinari-angular"],"type":"components","title":"Po Avatar","module":"po-avatar","path":"/projects/ui/src/lib/components/po-avatar/po-avatar.component.ts","preview":"O componente `po-avatar` é um container para imagens em miniatura, possui um formato redondo e cinco opções de\ntamanho, pode ser utilizado para mostrar a foto do perfil de um usuário, entre outras possibilidades.\n\nAlém de poder ser utilizado separadamente, é possível usar o `po-avatar` juntamente com outros componentes e criar\nlayouts ricos e bem interessantes para os usuários, como por exemplo, uma lista de itens ou produtos. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-breadcrumb","types":["portinari-angular"],"type":"components","title":"Po Breadcrumb","module":"po-breadcrumb","path":"/projects/ui/src/lib/components/po-breadcrumb/po-breadcrumb.component.ts","preview":"Este componente gera uma estrutura de navegação que apresenta ao usuário a localização\nda URL atual, exibindo as antecessoras conforme é realizado a navegação na aplicação.\n\nQuando não houver espaçamento suficiente para exibi-lás, o componente se encarrega também\nde agrupar as URLs antecessoras, gerando assim um ícone que permite a visualização em cascata.\n\nCaso um endereço seja especificado na propriedade `p-favorite-service`, o componente permite ao usuário\nfavoritar a URL.\n\nHavendo necessidade de incluir parâmetros na requisição do serviço,\no componente dispõe da propriedade `p-params-service` que recebe um objeto contendo as informações. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-button","types":["portinari-angular"],"type":"components","title":"Po Button","module":"po-button","path":"/projects/ui/src/lib/components/po-button/po-button.component.ts","preview":"O `po-button` permite que o usuário execute ações predefinidas pelo desenvolvedor.\n\nAtravés dos tipos, é possível identificar a importância de cada ação, sendo ela primária (`primary`) ou até mesmo uma\nação irreversível (`danger`), como a exclusão de um registro.\n\n#### Boas práticas\n\n- Evite `labels` extensos que quebram o layout do `po-button`, use `labels` diretos, curtos e intuitivos.\n- Utilize apenas um `po-button` configurado como `primary` por página.\n- Para ações irreversíveis use sempre o tipo `danger`. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-button-group","types":["portinari-angular"],"type":"components","title":"Po Button Group","module":"po-button-group","path":"/projects/ui/src/lib/components/po-button-group/po-button-group.component.ts","preview":"O componente `po-button-group` é formado por um conjunto de botões distribuídos horizontalmente.\nCada botão do grupo é tratado de forma individual, recebendo assim um rótulo, uma ação bem como se deverá estar habilitado ou não.\n\nEste componente além de servir como um agrupador de botões para ação, também permite que sejam utilizados\npara seleções multiplas e únicas.\n\nO grupo de botões deve ser utilizado para organizar as ações de maneira uniforme e transmitir a ideia de que os botões fazem\nparte de um mesmo contexto.\n\n#### Boas práticas\n\n- Evite usar o `po-button-group` com apenas 1 ação, para isso utilize o `po-button`.\n- Procure utilizar no máximo 3 ações para cada `po-button-group`.\n\n> As recomendações do `po-button` também valem para o `po-button-group`. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-calendar","types":["portinari-angular"],"type":"components","title":"Po Calendar","module":"po-calendar","path":"/projects/ui/src/lib/components/po-calendar/po-calendar.component.ts","preview":"O `po-calendar` é um componente para seleção de datas. Ele permite uma fácil navegação clicando nas setas\nde direcionamento e nos *labels* do ano ou mês.\n\nEste componente pode receber os seguintes formatos de data:\n\n- **Data e hora combinados (E8601DZw): yyyy-mm-ddThh:mm:ss+|-hh:mm**\n```\nthis.date = '2017-11-28T00:00:00-02:00';\n```\n\n- **Data (E8601DAw.): yyyy-mm-dd**\n```\nthis.date = '2017-11-28';\n```\n\n- **JavaScript Date Object:**\n```\nthis.date = new Date(2017, 10, 28);\n```\n\n> Independentemente do formato utilizado, o componente trata o valor do *model* internamente com o\nformato **Data (E8601DAw.): yyyy-mm-dd**.\n\nImportante:\n\n- Caso seja definida uma data fora do range da data mínima e data máxima via *ngModel* o componente mostrará\na data desabilitada porém o *model* não será alterado.\n- Caso seja definida uma data inválida a mesma não será atribuída ao calendário porém o *model* manterá a data inválida. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-tooltip","types":["portinari-angular"],"type":"directives","title":"Po Tooltip","module":"po-tooltip","path":"/projects/ui/src/lib/directives/po-tooltip/po-tooltip.directive.ts","preview":"A diretiva po-tooltip deve ser utilizada para oferecer informações adicionais quando os usuários\npassam o mouse sobre o elemento alvo ao qual ela está atribuída.\n\nO conteúdo é formado por um pequeno texto que deve contribuir para uma tomada de decisão ou\norientação do usuário. A ativação dele pode estar em qualquer componente ou tag HTML.\n\nPara textos maiores ou no caso de haver a necessidade de utilizar algum outro elemento como\nconteúdo deve-se utilizar o [**po-popover**](https://portinari.io/documentation/po-popover?view=doc). ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-chart","types":["portinari-angular"],"type":"components","title":"Po Chart","module":"po-chart","path":"/projects/ui/src/lib/components/po-chart/po-chart.component.ts","preview":"O `po-chart` é um componente para renderização de dados através de gráficos, com isso facilitando a compreensão e tornando a\nvisualização destes dados mais agradável.\n\nEste componente também possibilita a definição das seguintes propriedades:\n - altura\n - series\n - tipo\n - título\n\nAlém das definições de propriedades, também é possível definir uma ação que será executada ao clicar em determinado elemento do gráfico\ne outra que será executada ao passar o *mouse* sobre o elemento.\n\n#### Boas práticas\n\n- Para que o gráfico não fique ilegível e incompreensível, evite uma quantia excessiva de séries. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-container","types":["portinari-angular"],"type":"components","title":"Po Container","module":"po-container","path":"/projects/ui/src/lib/components/po-container/po-container.component.ts","preview":"O `po-container` é um componente que visa facilitar o agrupamento de conteúdos.\nPor padrão o mesmo exibe uma borda, um efeito de sombra ao seu redor e um espaçamento em sua parte interna, os quais\npodem ser desabilitados. Ao remover sua borda a sombra também será removida. Além disso, sua altura acompanha a\nquantidade do conteúdo, porém pode ser fixada. Para controlar sua largura, utilize o [Grid System](/guides/grid-system),\nassim possibilitando o tratamento para diferentes resoluções. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-disclaimer-group","types":["portinari-angular"],"type":"components","title":"Po Disclaimer Group","module":"po-disclaimer-group","path":"/projects/ui/src/lib/components/po-disclaimer-group/po-disclaimer-group.component.ts","preview":"O componente `po-disclaimer-group` é recomendado para manipular palavras-chave de filtros aplicados em uma pesquisa.\n\nÀ partir de dois *disclaimers* com o botão **fechar** habilitado, o componente renderiza de forma automática um novo e destacado\n*disclaimer* que possibilita **remover todos**, mas que também pode ser desabilitado.\n\nTambém é possível navegar entre os *disclaimers* através do teclado utilizando a tecla *tab* e, para remoção do *disclaimer* selecionado,\nbasta pressionar a tecla *enter*. Esta funcionalidade não se aplica caso a propriedade `hideClose` estiver habilitada.\n\n> Veja a integração destas funcionalidade no componente [po-page-list](/documentation/po-page-list). ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-divider","types":["portinari-angular"],"type":"components","title":"Po Divider","module":"po-divider","path":"/projects/ui/src/lib/components/po-divider/po-divider.component.ts","preview":"Este componente apresenta uma linha demarcadora de blocos e pode conter um *label*. Seu uso é indicado para definição\ne organização de informações em uma tela e sua característica é semelhante à tag `<hr>`. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-dropdown","types":["portinari-angular"],"type":"components","title":"Po Dropdown","module":"po-dropdown","path":"/projects/ui/src/lib/components/po-dropdown/po-dropdown.component.ts","preview":"O componente `po-dropdown` pode ser utilizado como um agrupador de ações e / ou opções.\n\n> Caso não haja configuração de rotas em sua aplicação, se faz necessário importar o `RouterModule`\nno módulo principal para o correto funcionamento deste componente:\n\n```\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [\n    ...\n    RouterModule.forRoot([]),\n    PoModule\n  ],\n  declarations: [\n    AppComponent\n  ],\n  exports: [],\n  providers: [],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n```\n> Para maiores dúvidas referente à configuração de rotas, acesse em nosso portal /Guias /Começando\n[/Configurando as rotas do po-menu](/guides/getting-started). ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-widget","types":["portinari-angular"],"type":"components","title":"Po Widget","module":"po-widget","path":"/projects/ui/src/lib/components/po-widget/po-widget.component.ts","preview":"O componente `po-widget` é recomendado para exibição de *dashboards*, podendo ser utilizado\npara incluir vários tipos de conteúdo como: gráficos, tabelas, grids e imagens.\n\nAlém da exibição de conteúdos, este componente possibilita adicionar ações e um link\npara ajuda, como também possibilita ser utilizado com ou sem sombra.\n\nPara controlar sua largura, é possível utilizar o [Grid System](/guides/grid-system) para um maior\ncontrole de seu redimensionamento, assim possibilitando o tratamento para diferentes resoluções. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-dynamic-form","types":["portinari-angular"],"type":"components","title":"Po Dynamic Form","module":"po-dynamic-form","path":"/projects/ui/src/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form.component.ts","preview":"Componente para criação de formulários dinâmicos a partir de uma lista de objetos.\n\nTambém é possível verificar se o formulário está válido e informar valores para a exibição de informações.\n\n> Temos uma ferramenta para criação de formulários, onde é possível inicializá-lo através de um JSON.\n[**Veja aqui**](tools/dynamic-form). ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-dynamic-view","types":["portinari-angular"],"type":"components","title":"Po Dynamic View","module":"po-dynamic-view","path":"/projects/ui/src/lib/components/po-dynamic/po-dynamic-view/po-dynamic-view.component.ts","preview":"Componente para listar dados dinamicamente a partir de uma lista de objetos.\n\n> Por padrão esse componente cria `po-info` para exibição, é possível criar `po-tag` passando a propriedade { tag: true }. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-checkbox-group","types":["portinari-angular"],"type":"components","title":"Po Checkbox Group","module":"po-checkbox-group","path":"/projects/ui/src/lib/components/po-field/po-checkbox-group/po-checkbox-group.component.ts","preview":"O componente `po-checkbox-group` exibe uma lista de múltipla escolha onde o usuário pode marcar e desmarcar,\nutilizando a tecla de espaço ou o clique do mouse, várias opções.\n\n> Para seleção única, utilize o [**Portinari Radio Group**](/documentation/po-radio-group).\n\nPor padrão, o po-checkbox-group retorna um array com os valores dos itens selecionados para o model.\n\n```\nfavorites = ['PO', 'Angular'];\n```\n\nNa maioria das situações, o array com os objetos setados já atende as necessidades mas, caso o desenvolvedor\ntenha necessidade de usar um valor indeterminado (`null`), ou seja, nem marcado (`true`) e nem desmarcado (`false`),\ndeve setar a propriedade `p-indeterminate` como `true`.\n\nNesse caso, o po-checkbox-group vai retornar um objeto com todas as opções disponíveis e seus valores.\n\n```\nfavorites = {\n PO: true,\n Angular: true,\n VueJS: false,\n React: null // indeterminado\n};\n``` ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-toolbar","types":["portinari-angular"],"type":"components","title":"Po Toolbar","module":"po-toolbar","path":"/projects/ui/src/lib/components/po-toolbar/po-toolbar.component.ts","preview":"O componente `po-toolbar` é um cabeçalho para o título da aplicação e informações de usuário e notificações quando houver necessidade. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-combo","types":["portinari-angular"],"type":"components","title":"Po Combo","module":"po-combo","path":"/projects/ui/src/lib/components/po-field/po-combo/po-combo.component.ts","preview":"O po-combo, semelhante ao po-select, exibe uma lista de valores e permite ao usuário fazer a seleção de um desses valores,\nmas no caso do po-combo, o usuário ainda consegue filtrar os valores disponibilizados para seleção.\n\nTambém há a possibilidade de usar serviço no po-combo, através da propriedade p-filter-service.\n\nO comportamento do po-combo permite ao usuário:\n - selecionar um item através do mouse;\n - navegar pelos itens utilizando as setas do teclado confirmando a seleção com \"Enter\";\n - pesquisar os itens da lista de seleção e em seguida navegar com as setas ou com o mouse;\n - digitar a descrição completa.\n\nO po-combo guarda o último valor caso o usuário desista de uma busca, deixando o campo ou teclando \"ESC\".\nCaso seja digitado no campo de busca a descrição completa de um item, então a seleção será automaticamente efetuada\nao deixar o campo ou pressionando \"Enter\".\n\nÉ necessário que os itens da lista de selecão contenham sempre valor (value) e descrição (label) para que os itens apareçam corretamente\nno po-combo, itens que não estejam implementando corretamenta a interface PoComboOption, serão descartados.\n\nO po-combo ainda permite definir o modo que será feito o filtro, através da propriedade p-filter-mode. Utilizando po-combo com serviço, é possivel digitar um valor no campo de entrada e pressionar a tecla 'tab' para que o componente\nfaça uma requisição à URL informada passando o valor digitado no campo. Se encontrado o valor, então o mesmo será selecionado, caso\nnão seja encontrado, então a lista de itens voltará para o estado inicial.","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-datepicker","types":["portinari-angular"],"type":"components","title":"Po Datepicker","module":"po-datepicker","path":"/projects/ui/src/lib/components/po-field/po-datepicker/po-datepicker.component.ts","preview":"O `po-datepicker` é um componente específico para manipulação de datas permitindo a digitação e / ou seleção.\n\nO formato de exibição da data, ou seja, o formato que é apresentado ao usuário é o dd/mm/yyyy,\nmas podem ser definidos outros padrões (veja mais na propriedade `p-format`).\n\nO idioma padrão do calendário será exibido de acordo com o navegador, caso tenha necessidade de alterar\nuse a propriedade `p-locale`.\n\nO datepicker aceita três formatos de data: o E8601DZw (yyyy-mm-ddThh:mm:ss+|-hh:mm), o E8601DAw (yyyy-mm-dd) e o\nDate padrão do Javascript.\n\n> O formato de saída do *model* se ajusta conforme o formato de entrada, veja abaixo:\n\n- Formato de entrada e saída (E8601DZw) - `'2017-11-28T00:00:00-02:00'`;\n\n- Formato de entrada e saída (E8601DAw) - `'2017-11-28'`;\n\n- Formato de entrada (Date) - `new Date(2017, 10, 28)` e saída (E8601DAw) - `'2017-11-28'`;\n\n**Importante:**\n\n- Para utilizar datas com ano inferior a 100, verificar o comportamento do [`new Date`](https://www.w3schools.com/js/js_dates.asp)\ne utilizar o método [`setFullYear`](https://www.w3schools.com/jsref/jsref_setfullyear.asp).\n- Caso a data esteja inválida, o `model` receberá **'Data inválida'**.\n- Caso o `input` esteja passando um `[(ngModel)]`, mas não tenha um `name`, então irá ocorrer um erro\ndo próprio Angular (`[ngModelOptions]=\"{standalone: true}\"`).\n\nExemplo:\n\n```\n<po-datepicker\n  [(ngModel)]=\"pessoa.nome\"\n  [ngModelOptions]=\"{standalone: true}\"\n</po-datepicker>\n```\n\n> Não esqueça de importar o `FormsModule` em seu módulo, tal como para utilizar o `input default`. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-datepicker-range","types":["portinari-angular"],"type":"components","title":"Po Datepicker Range","module":"po-datepicker-range","path":"/projects/ui/src/lib/components/po-field/po-datepicker-range/po-datepicker-range.component.ts","preview":"O `po-datepicker-range` é um componente para seleção de um período entre duas datas, onde é possível informar apenas\na data inicial ou a data final.\n\nO componente `[(ngModel)]` do `po-datepicker-range` trabalha com um objeto que implementa a interface\n`PoDatepickerRange`, contendo as seguintes propriedades:\n```\n{ \"start\": '2017-11-28', \"end\": '2017-11-30' }\n```\n\n<a id=\"accepted-formats\"></a>\nEste componente pode receber os seguintes formatos de data:\n\n- **Data e hora combinados (E8601DZw): yyyy-mm-ddThh:mm:ss+|-hh:mm**\n```\n'2017-11-28T00:00:00-02:00';\n```\n\n- **Data (E8601DAw.): yyyy-mm-dd**\n```\n'2017-11-28';\n```\n\n- **JavaScript Date Object:**\n```\nnew Date(2017, 10, 28);\n```\n\n> O componente respeitará o formato passado para o *model* via codificação. Porém, caso seja feita alteração em algum\ndos valores de data em tela, o componente atribuirá o formato **Data (E8601DAw.): yyyy-mm-dd** ao model.\n\nImportante:\n\n- Quando preenchidas a data inicial e final, a data inicial deve ser sempre menor ou igual a data final;\n- Ao passar uma data inválida via codificação, o valor será mantido no *model* e o `input` da tela aparecerá vazio;\n- Permite trabalhar com as duas datas separadamente através das propriedades `p-start-date` e `p-end-date` no lugar do\n`[(ngModel)]`, no entanto sem a validação do formulário;\n- Para a validação do formulário, utilize o `[(ngModel)]`. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-decimal","types":["portinari-angular"],"type":"components","title":"Po Decimal","module":"po-decimal","path":"/projects/ui/src/lib/components/po-field/po-decimal/po-decimal.component.ts","preview":"Este é um componente baseado em input, com várias propriedades do input nativo e outras\npropriedades extras como: máscara, pattern, mensagem de erro e etc.\nVocê deve informar a variável que contém o valor como [(ngModel)]=\"variavel\", para que o\ninput receba o valor da variável e para que ela receba as alterações do valor (two-way-databinding).\nA propriedade name é obrigatória para que o formulário e o model funcionem corretamente.\n\nImportante:\n\n- Caso o input tenha um [(ngModel)] sem o atributo name, ocorrerá um erro de angular.\nEntão você precisa informar o atributo name ou o atributo [ngModelOptions]=\"{standalone: true}\".\nExemplo: [(ngModel)]=\"pessoa.nome\" [ngModelOptions]=\"{standalone: true}\" po-decimal é um input específico para receber apenas números decimais.\nQuando utilizado, o componente terá comportamento de um campo de 'text' com algumas características:\n\n- Aceita apenas números;\n- Utiliza ',' como separador de decimal;\n- Utiliza '.' para separação de milhar;\n- É possível configurar a quantidade de casas decimais e a quantidade de digitos do campo.","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-email","types":["portinari-angular"],"type":"components","title":"Po Email","module":"po-email","path":"/projects/ui/src/lib/components/po-field/po-email/po-email.component.ts","preview":"Este é um componente baseado em input, com várias propriedades do input nativo e outras\npropriedades extras como: máscara, pattern, mensagem de erro e etc.\nVocê deve informar a variável que contém o valor como [(ngModel)]=\"variavel\", para que o\ninput receba o valor da variável e para que ela receba as alterações do valor (two-way-databinding).\nA propriedade name é obrigatória para que o formulário e o model funcionem corretamente.\n\nImportante:\n\n- Caso o input tenha um [(ngModel)] sem o atributo name, ocorrerá um erro de angular.\nEntão você precisa informar o atributo name ou o atributo [ngModelOptions]=\"{standalone: true}\".\nExemplo: [(ngModel)]=\"pessoa.nome\" [ngModelOptions]=\"{standalone: true}\" po-email é um input específico para receber E-mail, com o pattern já configurado.","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-input","types":["portinari-angular"],"type":"components","title":"Po Input","module":"po-input","path":"/projects/ui/src/lib/components/po-field/po-input/po-input.component.ts","preview":"Este é um componente baseado em input, com várias propriedades do input nativo e outras\npropriedades extras como: máscara, pattern, mensagem de erro e etc.\nVocê deve informar a variável que contém o valor como [(ngModel)]=\"variavel\", para que o\ninput receba o valor da variável e para que ela receba as alterações do valor (two-way-databinding).\nA propriedade name é obrigatória para que o formulário e o model funcionem corretamente.\n\nImportante:\n\n- Caso o input tenha um [(ngModel)] sem o atributo name, ocorrerá um erro de angular.\nEntão você precisa informar o atributo name ou o atributo [ngModelOptions]=\"{standalone: true}\".\nExemplo: [(ngModel)]=\"pessoa.nome\" [ngModelOptions]=\"{standalone: true}\" ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-login","types":["portinari-angular"],"type":"components","title":"Po Login","module":"po-login","path":"/projects/ui/src/lib/components/po-field/po-login/po-login.component.ts","preview":"Este é um componente baseado em input, com várias propriedades do input nativo e outras\npropriedades extras como: máscara, pattern, mensagem de erro e etc.\nVocê deve informar a variável que contém o valor como [(ngModel)]=\"variavel\", para que o\ninput receba o valor da variável e para que ela receba as alterações do valor (two-way-databinding).\nA propriedade name é obrigatória para que o formulário e o model funcionem corretamente.\n\nImportante:\n\n- Caso o input tenha um [(ngModel)] sem o atributo name, ocorrerá um erro de angular.\nEntão você precisa informar o atributo name ou o atributo [ngModelOptions]=\"{standalone: true}\".\nExemplo: [(ngModel)]=\"pessoa.nome\" [ngModelOptions]=\"{standalone: true}\" O po-login é um input específico para login. Já possui tipo, estilo e ícone predefinidos.","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-lookup","types":["portinari-angular"],"type":"components","title":"Po Lookup","module":"po-lookup","path":"/projects/ui/src/lib/components/po-field/po-lookup/po-lookup.component.ts","preview":"Componente utilizado para abrir uma janela de busca com uma tabela que lista dados de um serviço. Nesta janela é possível buscar e\nselecionar o registro que será enviado para o campo. O `po-lookup` permite que o usuário digite um valor e pressione a tecla *TAB* para\nbuscar um registro.\n\n> Caso o campo seja iniciado ou preenchido com um valor inexistente na busca, o mesmo será limpado.\nNo segundo caso ocorrerá após este perder o foco; ambos os casos o campo ficará inválido quando requerido.\n\nEste componente não é recomendado quando a busca dos dados possuir poucas informações, para isso utilize outros componentes como o\n`po-select` ou o `po-combo`. Quando existe muitos dados o po-lookup por padrão traz apenas 10 itens na tabela e os demais são carregados por demanda através do\nbotão 'Carregar mais resultados'. Para que funcione corretamente, é importante que o serviço siga o\n[Guia de implementação das APIs TOTVS](http://tdn.totvs.com/pages/releaseview.action?pageId=271660444).\n\nImportante:\n\n- Caso o po-lookup contenha o [(ngModel)] sem o atributo name, ocorrerá um erro de angular.\nEntão será necessário informar o atributo name ou o atributo [ngModelOptions]=\"{standalone: true}\".\n```\n<po-lookup\n  [(ngModel)]=\"pessoa.nome\"\n  [ngModelOptions]=\"{standalone: true}\">\n</po-lookup>\n```","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-tag","types":["portinari-angular"],"type":"components","title":"Po Tag","module":"po-tag","path":"/projects/ui/src/lib/components/po-tag/po-tag.component.ts","preview":"Este componente apresenta um valor em um marcador colorido que pode conter ícone e *label*, as cores são definidas conforme o tipo\nescolhido.\nSeu uso é indicado para informações que necessitam de destaque em forma de marcação. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-multiselect","types":["portinari-angular"],"type":"components","title":"Po Multiselect","module":"po-multiselect","path":"/projects/ui/src/lib/components/po-field/po-multiselect/po-multiselect.component.ts","preview":"O po-multiselect é um componente de múltipla seleção.\nEste componente é recomendado para dar ao usuário a opção de selecionar vários itens em uma lista.\n\nQuando a lista possuir poucos itens, deve-se dar preferência para o uso do po-checkbox-group, por ser mais simples\ne mais rápido para a seleção do usuário.\n\nEste componente também não deve ser utilizado em casos onde a seleção seja única. Nesses casos, deve-se utilizar o\npo-select, po-combo ou po-radio-group. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-number","types":["portinari-angular"],"type":"components","title":"Po Number","module":"po-number","path":"/projects/ui/src/lib/components/po-field/po-number/po-number.component.ts","preview":"Este é um componente baseado em input, com várias propriedades do input nativo e outras\npropriedades extras como: máscara, pattern, mensagem de erro e etc.\nVocê deve informar a variável que contém o valor como [(ngModel)]=\"variavel\", para que o\ninput receba o valor da variável e para que ela receba as alterações do valor (two-way-databinding).\nA propriedade name é obrigatória para que o formulário e o model funcionem corretamente.\n\nImportante:\n\n- Caso o input tenha um [(ngModel)] sem o atributo name, ocorrerá um erro de angular.\nEntão você precisa informar o atributo name ou o atributo [ngModelOptions]=\"{standalone: true}\".\nExemplo: [(ngModel)]=\"pessoa.nome\" [ngModelOptions]=\"{standalone: true}\" po-number é um input específico para receber apenas números.\nÉ possível configurar um valor mínimo, máximo e um step com p-min, p-max e p-step,\nrespectivamente.","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-password","types":["portinari-angular"],"type":"components","title":"Po Password","module":"po-password","path":"/projects/ui/src/lib/components/po-field/po-password/po-password.component.ts","preview":"Este é um componente baseado em input, com várias propriedades do input nativo e outras\npropriedades extras como: máscara, pattern, mensagem de erro e etc.\nVocê deve informar a variável que contém o valor como [(ngModel)]=\"variavel\", para que o\ninput receba o valor da variável e para que ela receba as alterações do valor (two-way-databinding).\nA propriedade name é obrigatória para que o formulário e o model funcionem corretamente.\n\nImportante:\n\n- Caso o input tenha um [(ngModel)] sem o atributo name, ocorrerá um erro de angular.\nEntão você precisa informar o atributo name ou o atributo [ngModelOptions]=\"{standalone: true}\".\nExemplo: [(ngModel)]=\"pessoa.nome\" [ngModelOptions]=\"{standalone: true}\" O po-password é um input específico para senhas. Já possui tipo, estilo e ícone predefinidos.","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-radio-group","types":["portinari-angular"],"type":"components","title":"Po Radio Group","module":"po-radio-group","path":"/projects/ui/src/lib/components/po-field/po-radio-group/po-radio-group.component.ts","preview":"O componente `po-radio-group` deve ser utilizado para disponibilizar múltiplas opções ao usuário, permitindo a ele que\nselecione apenas uma delas. Seu uso é recomendado para um número pequeno de opções, caso contrário, recomenda-se o uso\ndo [**po-combo**](/documentation/po-combo) ou [**po-select**](/documentation/po-select).\n\nEste não é um componente de multiseleção, se for este o caso, deve-se utilizar o\n[**po-checkbox-group**](/documentation/po-checkbox-group).\n\n> Ao passar um valor para o *model* que não esteja na lista de opções, o mesmo será definido como `undefined`. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-rich-text","types":["portinari-angular"],"type":"components","title":"Po Rich Text","module":"po-rich-text","path":"/projects/ui/src/lib/components/po-field/po-rich-text/po-rich-text.component.ts","preview":"O componente `po-rich-text` é um editor de textos enriquecidos.\n\nPara edição de texto simples sem formatação recomenda-se o uso do componente [**po-textarea**](/documentation/po-textarea).\n\n> No navegador Internet Explorer não é possível alterar a cor do texto. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-select-option-template","types":["portinari-angular"],"type":"components","title":"Po Select Option Template","module":"po-select-option-template","path":"/projects/ui/src/lib/components/po-field/po-select/po-select-option-template/po-select-option-template.directive.ts","preview":"Esta diretiva permite personalizar o conteúdo dos itens exibidos na lista suspensa do componente.\n\n> Quando utilizada em _mobile_ será exibido o componente nativo.\n\nPara personalizar o conteúdo de cada item da lista deve-se utilizar a diretiva `p-select-option-template` com `ng-template`\ndentro da tag `po-select`.\n\nPara obter a referência do item atual, use `let-option`, com isso você terá acesso aos valores e poderá personalizar sua exibição.\n\nEsta diretiva compõe-se de dois meios para uso, de forma explícita tal como em *syntax sugar*. Veja a seguir ambos, respectivamente:\n\n```\n...\n<po-select\n  name=\"select\"\n  [(ngModel)]=\"select\"\n  [p-options]=\"options\">\n    <ng-template p-select-option-template let-option>\n      <option-template [option]=\"option\"></option-template>\n    </ng-template>\n</po-select>\n...\n```\n\n```\n...\n<po-select\n  name=\"select\"\n  [(ngModel)]=\"select\"\n  [p-options]=\"options\">\n    <div *p-select-option-template=\"let option\">\n      <option-template [option]=\"option\"></option-template>\n    </div>\n</po-select>\n...\n\n```","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-select","types":["portinari-angular"],"type":"components","title":"Po Select","module":"po-select","path":"/projects/ui/src/lib/components/po-field/po-select/po-select.component.ts","preview":"O componente po-select exibe uma lista de valores e permite que o usuário selecione um desses valores.\nOs valores listados podem ser fixos ou dinâmicos de acordo com a necessidade do desenvolvedor, dando mais flexibilidade ao componente.\nO po-select não permite que o usuário informe um valor diferente dos valores listados, isso garante a consistência da informação.\nO po-select não permite que sejam passados valores duplicados, undefined e null para as opções, excluindo-os da lista.\n\n> Ao passar um valor para o _model_ que não está na lista de opções, o mesmo será definido como `undefined`.\n\nTambém existe a possibilidade de utilizar um _template_ para a exibição dos itens da lista,\nveja mais em **[p-select-option-template](/documentation/po-select-option-template)**. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-tabs","types":["portinari-angular"],"type":"components","title":"Po Tabs","module":"po-tabs","path":"/projects/ui/src/lib/components/po-tabs/po-tabs.component.ts","preview":"O componente `po-tabs` é responsável por agrupar [abas](/documentation/po-tab) dispostas numa linha horizontal,\nideal para facilitar a organização de conteúdos.\n\nEm dispositivos móveis o componente exibirá tadas as abas de maneira linear gerando um *scroll* na horizontal. Já em telas telas com\nresoluções maiores, o componente exibirá até cinco abas normalmente, porém, à partir de seis abas o componente automaticamente torna\nvisível apenas as quatro primeiras, agrupando as subsequentes na quinta aba rotulada de **Mais**.\n\n> As abas que estiverem agrupadas serão dispostas numa cascata suspensa que será exibida ao clicar no botão **Mais**.\n\nÉ possível realizar a navegação entre as abas através da tecla TAB do teclado.\nCaso uma aba estiver desabilitada, não receberá foco de navegação.\n\n#### Boas práticas\n\n- Evite utilizar uma quantidade excessiva de abas, pois irá gerar um *scroll* muito longo no `dropdown`;\n- Evite `labels` extensos para as `tabs` pois podem quebrar seu *layout*, use `labels` diretos, curtos e intuitivos. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-switch","types":["portinari-angular"],"type":"components","title":"Po Switch","module":"po-switch","path":"/projects/ui/src/lib/components/po-field/po-switch/po-switch.component.ts","preview":"O componente `po-switch` é um [checkbox](/documentation/po-checkbox-group) mais intuitivo, pois faz analogia a um interruptor.\nDeve ser usado quando deseja-se transmitir a ideia de ligar / desligar uma funcionalidade específica.\n\nPode-se ligar ou deligar o botão utilizando a tecla de espaço ou o clique do mouse.\n\nO texto exibido pode ser alterado de acordo com o valor setado aumentando as possibilidades de uso do componente,\nportanto, recomenda-se informar textos que contextualizem seu uso para que facilite a compreensão do usuário.\n\n> O componente não altera o valor incial informado no *model*, portanto indica-se inicializa-lo caso ter necessidade. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-textarea","types":["portinari-angular"],"type":"components","title":"Po Textarea","module":"po-textarea","path":"/projects/ui/src/lib/components/po-field/po-textarea/po-textarea.component.ts","preview":"Este é um componente de entrada de dados que possibilita o preechimento com múltiplas linhas.\nÉ recomendado para observações, detalhamentos e outras situações onde o usuário deva preencher com um texto.\n\nImportante:\n\n- A propriedade `name` é obrigatória para que o formulário e o `model` funcionem corretamente. Do contrário, ocorrerá um erro de\n_Angular_, onde será necessário informar o atributo `name` ou o atributo `[ngModelOptions]=\"{standalone: true}\"`, por exemplo:\n\n```\n<po-textarea\n  [(ngModel)]=\"pessoa.nome\"\n  [ngModelOptions]=\"{standalone: true}\">\n</po-textarea>\n``` ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-upload","types":["portinari-angular"],"type":"components","title":"Po Upload","module":"po-upload","path":"/projects/ui/src/lib/components/po-field/po-upload/po-upload.component.ts","preview":"O componente `po-upload` permite que o usuário envie arquivo(s) ao servidor e acompanhe o progresso.\nEste componente também possibilita algumas configurações como:\n - Múltipla seleção, onde o usuário pode enviar mais de um arquivo ao servidor.\n - Auto envio, onde o arquivo é enviado imediatamente após a seleção do usuário, não necessitando que o usuário\nclique em enviar.\n - Restrições de formatos de arquivo e tamanho.\n - Função de sucesso que será disparada quando os arquivos forem enviados com sucesso.\n - Função de erro que será disparada quando houver erro no envio dos arquivos.\n - Permite habilitar uma área onde os arquivos podem ser arrastados. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-url","types":["portinari-angular"],"type":"components","title":"Po Url","module":"po-url","path":"/projects/ui/src/lib/components/po-field/po-url/po-url.component.ts","preview":"Este é um componente baseado em input, com várias propriedades do input nativo e outras\npropriedades extras como: máscara, pattern, mensagem de erro e etc.\nVocê deve informar a variável que contém o valor como [(ngModel)]=\"variavel\", para que o\ninput receba o valor da variável e para que ela receba as alterações do valor (two-way-databinding).\nA propriedade name é obrigatória para que o formulário e o model funcionem corretamente.\n\nImportante:\n\n- Caso o input tenha um [(ngModel)] sem o atributo name, ocorrerá um erro de angular.\nEntão você precisa informar o atributo name ou o atributo [ngModelOptions]=\"{standalone: true}\".\nExemplo: [(ngModel)]=\"pessoa.nome\" [ngModelOptions]=\"{standalone: true}\" po-url é um input específico para receber URL, com o pattern já configurado.","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-tab","types":["portinari-angular"],"type":"components","title":"Po Tab","module":"po-tab","path":"/projects/ui/src/lib/components/po-tabs/po-tab/po-tab.component.ts","preview":"O componente `po-tab` renderiza uma aba na qual envolve um conteúdo HTML.\n\nCom este componente é possível atribuir um rótulo para auxiliar na identificação do conteúdo, ativar para que o mesmo seja exibido,\ndesabilitar para impossibilitar o acesso, bem como ocultar para indisponibilizar a aba.\n\n> Para controlar a navegação entre diversas abas, utilizar o componente [`po-tabs`](/documentation/po-tabs). ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-grid","types":["portinari-angular"],"type":"components","title":"Po Grid","module":"po-grid","path":"/projects/ui/src/lib/components/po-grid/po-grid.component.ts","preview":"Componente grid.\n\nAções / atalhos:\n\n- ARROW-UP: Navega para celula superior / Na ultima linha adiciona uma linha em branco no grid;\n- ARROW-DOWN: Navega para celula inferior;\n- ARROW-RIGHT: Navega para celula direita;\n- ARROW-LEFT: Navega para celula esquerda;\n- TAB: Navega para próxima celula;\n- SHIFT+TAB: Navega para celula anterior;\n- CTRL+DEL: Remove linha;\n- DEL/BACKSPACE: Limpa celula;\n- ENTER: Edita linha com valor atual/Confirma edição da celula;\n- DOUBLE-CLICK: Edita linha com valor atual;\n- ESC: Cancela edição da celula / Cancela inserção de linhas em branco;\n- A..Z/0..9: Inicia edição com valor em branco.","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-info","types":["portinari-angular"],"type":"components","title":"Po Info","module":"po-info","path":"/projects/ui/src/lib/components/po-info/po-info.component.ts","preview":" Este componente tem como objetivo renderizar valores na tela no estilo label na parte superior e\nvalor na parte inferior. Facilita a exibição de dados pois vem com layout padrão Portinari.","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-list-view-content-template","types":["portinari-angular"],"type":"components","title":"Po List View Content Template","module":"po-list-view-content-template","path":"/projects/ui/src/lib/components/po-list-view/po-list-view-content-template/po-list-view-content-template.directive.ts","preview":"Esta diretiva permite que sejam apresentadas informações essenciais de cada item.\n\nDeve-se utilizar como parâmetro a referência do item e/ou índice, sendo por padrão o item.\n - Item: `item` determina o item da linha corrente.\n - Índice: `index` determina o índice da linha corrente.\n\nEsta diretiva pode ser usada de duas formas: explícita ou *syntax sugar*. Veja a seguir ambos, respectivamente:\n\n```\n...\n<po-list-view\n  p-property-title=\"name\"\n  [p-items]=\"[{id: 1, name: \"Register\", email: register@portinari.com}]\">\n\n  <ng-template p-list-view-content-template let-item let-code=\"index\">\n    <div class=\"po-row\">\n      <po-info class=\"po-md-6\" p-label=\"Code\" [p-value]=\"code\"></po-info>\n      <po-info class=\"po-md-6\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\n    </div>\n  </ng-template>\n\n</po-list-view>\n\n...\n```\n\n```\n...\n<po-list-view\n   p-property-title=\"name\"\n   [p-items]=\"[{id: 1, name: \"Register\", email: register@portinari.com}]\">\n\n   <div *p-list-view-content-template=\"let item, let i=index\" class=\"po-row\">\n     <po-info class=\"po-md-12\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\n   </div>\n</po-list-view>\n...\n\n```\n\nA diretiva **p-list-view-content-template**, possibilita também alterar o título dos itens. Para isto,\né necessário atribuir a referência da função que faz a alteração, à propriedade `p-title`,\na mesma deve retornar um valor do tipo *string*. Veja o exemplo a seguir:\n\n```\n...\n@Component({\n   selector: 'app-root',\n   template: `\n     ...\n     <po-list-view\n       [p-items]=\"items\">\n       <ng-template p-list-view-content-template let-item [p-title]=\"customTitle\">\n         <div class=\"po-row\">\n           <po-info class=\"po-md-12\" p-label=\"Customer\" [p-value]=\"item.customer\"></po-info>\n         </div>\n       </ng-template>\n     ...\n   `\n})\nexport class AppComponent {\n   public items = [{\n     code: 1200,\n     product: 'Rice',\n     customer: 'Supermarket 1',\n   }, {\n     code: 1355,\n     product: 'Bean',\n     customer: 'Supermarket 2'\n   }];\n\n   customTitle(item) {\n     return `${item.code} - ${item.product}`;\n   }\n}\n```","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-list-view-detail-template","types":["portinari-angular"],"type":"components","title":"Po List View Detail Template","module":"po-list-view-detail-template","path":"/projects/ui/src/lib/components/po-list-view/po-list-view-detail-template/po-list-view-detail-template.directive.ts","preview":"Esta diretiva permite que sejam apresentadas informações adicionais de cada item, construindo um\nbotão `Exibir detalhes` abaixo do conteúdo principal do item.\n\nDeve-se utilizar como parâmetro a referência do item e/ou índice, sendo por padrão o item.\n - Item: `item` determina o item da linha corrente.\n - Índice: `index` determina o índice da linha corrente.\n\nEsta diretiva pode ser usada de duas formas: explícita ou *syntax sugar*. Veja a seguir ambos, respectivamente:\n\n```\n...\n<po-list-view\n  p-property-title=\"name\"\n  [p-items]=\"items\">\n\n  <ng-template p-list-view-detail-template let-item let-code=\"index\">\n    <div class=\"po-row\">\n      <po-info class=\"po-md-6\" p-label=\"Code\" [p-value]=\"code\"></po-info>\n      <po-info class=\"po-md-12\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\n    </div>\n  </ng-template>\n\n</po-list-view>\n\n...\n```\n\n```\n...\n<po-list-view\n   p-property-title=\"name\"\n   [p-items]=\"items\">\n   <div *p-list-view-detail-template=\"let item, let i=index\" class=\"po-row\">\n     <po-info class=\"po-md-12\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\n   </div>\n</po-list-view>\n...\n\n```","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-list-view","types":["portinari-angular"],"type":"components","title":"Po List View","module":"po-list-view","path":"/projects/ui/src/lib/components/po-list-view/po-list-view.component.ts","preview":"Componente de lista que recebe um array de objetos e renderiza de forma dinâmica os dados de\nacordo com a necessidade de cada tela e deve ser utilizado em conjunto com as diretivas de *templates*\n **[p-list-view-content-template](/documentation/po-list-view-content-template)** e\n**[p-list-view-detail-template](/documentation/po-list-view-detail-template)**.\n\nO componente disponibiliza uma área específica para exibição informações adicionais,\natravés da diretiva **[p-list-view-detail-template](/documentation/po-list-view-detail-template)**. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-loading-overlay","types":["portinari-angular"],"type":"components","title":"Po Loading Overlay","module":"po-loading-overlay","path":"/projects/ui/src/lib/components/po-loading/po-loading-overlay/po-loading-overlay.component.ts","preview":"Este componente mostra ao usuário uma imagem de _loading_ e bloqueia a página inteira ou o container escolhido,\nenquanto aguarda a resposta de alguma requisição. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-menu-header-template","types":["portinari-angular"],"type":"components","title":"Po Menu Header Template","module":"po-menu-header-template","path":"/projects/ui/src/lib/components/po-menu/po-menu-header-template/po-menu-header-template.directive.ts","preview":"Esta diretiva permite adicionar um conteúdo personalizado entre a logo e o campo de filtro do cabeçalho do\n[`po-menu`](/documentation/po-menu).\n\nPara personalizar o conteúdo do cabeçalho deve-se utilizar a diretiva `p-menu-header-template` dentro da *tag* do\n[`po-menu`](/documentation/po-menu). Podendo ser utilizada de duas formas:\n\nCom `ng-template`\n```\n...\n<po-menu [p-menus]=\"menus\">\n  <ng-template p-menu-header-template>\n    ...\n  </ng-template>\n</po-menu>\n...\n```\n\nou com *syntax sugar*\n```\n...\n<po-menu [p-menus]=\"menus\">\n  <div *p-menu-header-template>\n    ...\n  </div>\n</po-menu>\n...\n```\n\n> Quando o menu estiver colapsado ou tela for _mobile_ o conteúdo personalizado não será exibido.","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-menu","types":["portinari-angular"],"type":"components","title":"Po Menu","module":"po-menu","path":"/projects/ui/src/lib/components/po-menu/po-menu.component.ts","preview":"Este é um componente de menu lateral que é utilizado para navegação nas páginas de uma aplicação.\n\nO componente po-menu recebe uma lista de objetos do tipo `MenuItem` com as informações dos itens de menu como\ntextos, links para redirecionamento, ações, até 4 níveis de menu e ícones para o primeiro nível de menu. Aparece completo em telas com largura maior que 1200px, caso contrário o menu é escondido e chamado por meio de um botão.\n\nO menu também pode ser colapsado. Essa opção é habilitada quando todos os itens de primeiro nível possuírem ícones e textos curtos.\nSe colapsado, somente os itens de primeiro nível serão exibidos e, caso o item selecionado possua sub-níveis,\nentão o menu alternará novamente para o estado aberto.\n\nExiste a possibilidade de customizar a logomarca, que é exibida na parte superior do componente.\n\nE para adicionar um conteúdo personalizado entre a logomarca e o campo de filtro,\nbasta adicionar este conteúdo com a diretiva [**p-menu-header-template**](/documentation/po-menu-header-template).\n\nCaso utilizar o filtro de menus, é possível realizar buscas em serviço, apenas informando a URL do serviço ou a instância de\num serviço customizado implementando a interface `PoMenuFilter`.\n\nPara o menu funcionar corretamente é necessário importar o `RouterModule` e `Routes` do módulo principal de\n sua aplicação:\n\n````\nimport { RouterModule, Routes } from '@angular/router';\n\n...\n\n@NgModule({\n  imports: [\n    RouterModule,\n    Routes,\n    ...\n    PoModule,\n    ...\n  ],\n  declarations: [\n    AppComponent\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n```\n\nAlém disso é necessário criar um módulo configurando as rotas da aplicação.\n\n```\nimport { NgModule } from '@angular/core';\n\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HelloWorldComponent } from './hello-world/hello-world.component';\n\nconst routes: Routes = [\n  {path: 'hello-world', component: HelloWorldComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n```","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-menu-panel","types":["portinari-angular"],"type":"components","title":"Po Menu Panel","module":"po-menu-panel","path":"/projects/ui/src/lib/components/po-menu-panel/po-menu-panel.component.ts","preview":"Este é um componente de menu lateral composto apenas por ícones e com um nível, utilizado para navegação\nem páginas internas, externas da aplicação ou aciona uma ação.\n\nO componente `po-menu-panel` recebe uma lista de objetos do tipo `MenuPanelItem` com as informações dos\nitens de menu como textos, links para redirecionamento, ações e ícones. Para o menu funcionar corretamente é necessário importar o `RouterModule` e `Routes` do módulo principal de\n sua aplicação:\n\n````\nimport { RouterModule, Routes } from '@angular/router';\n\n...\n\n@NgModule({\n  imports: [\n    RouterModule,\n    Routes,\n    ...\n    PoModule,\n    ...\n  ],\n  declarations: [\n    AppComponent\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n```\n\nAlém disso é necessário criar um módulo configurando as rotas da aplicação.\n\n```\nimport { NgModule } from '@angular/core';\n\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HelloWorldComponent } from './hello-world/hello-world.component';\n\nconst routes: Routes = [\n  {path: 'hello-world', component: HelloWorldComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n```","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-modal","types":["portinari-angular"],"type":"components","title":"Po Modal","module":"po-modal","path":"/projects/ui/src/lib/components/po-modal/po-modal.component.ts","preview":"O componente `po-modal` é utilizado para incluir conteúdos rápidos e informativos.\n\nNo cabeçalho do componente é possível definir um título e como também permite ocultar o ícone de fechamento da modal.\n\nEm seu corpo é possível definir um conteúdo informativo, podendo utilizar componentes como por exemplo `po-chart`,\n`po-table` e os demais componentes do PO.\n\nNo rodapé encontram-se os botões de ação primária e secundária, no qual permitem definir uma ação e um rótulo, bem como\ndefinir um estado de carregando e / ou desabilitado. Também é possível definir o botão com o tipo *danger*.\n\n> É possível fechar a modal através da tecla *ESC*, quando a propriedade `p-hide-close` não estiver habilitada. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-table","types":["portinari-angular"],"type":"components","title":"Po Table","module":"po-table","path":"/projects/ui/src/lib/components/po-table/po-table.component.ts","preview":"Este componente de tabela é utilizado para exibição de listas, com diferentes tipos de dados que podem ser texto,\ndata, horário e número com formato personalizado.\n\nÉ possivel criar uma tabela com ordenação de dados, linhas com detalhes, coluna de seleção de linhas,\ncoluna com ações e também carregamento por demanda com o botão \"Carregar mais resultados\".\n\nTambém existe a possibilidade de utilizar _template_ para os detalhes das linhas,\nveja mais em **[p-table-row-template](/documentation/po-table-row-template)**.\n\nQuando a largura de todas as colunas for definida, caso o tamanho total delas seja maior que a tabela, será exibido um scroll horizontal. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-navbar","types":["portinari-angular"],"type":"components","title":"Po Navbar","module":"po-navbar","path":"/projects/ui/src/lib/components/po-navbar/po-navbar.component.ts","preview":"O componente `po-navbar` é um cabeçalho fixo que permite apresentar uma lista de links para facilitar a navegação pelas\npáginas da aplicação. Também possui ícones com ações. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-page-default","types":["portinari-angular"],"type":"components","title":"Po Page Default","module":"po-page-default","path":"/projects/ui/src/lib/components/po-page/po-page-default/po-page-default.component.ts","preview":"O componente `po-page-default` é utilizado como o container principal para as telas sem um template definido. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-table-row-template","types":["portinari-angular"],"type":"components","title":"Po Table Row Template","module":"po-table-row-template","path":"/projects/ui/src/lib/components/po-table/po-table-row-template/po-table-row-template.directive.ts","preview":"Esta diretiva permite que seja apresentada informações adicionais a respeito de uma determinada linha de\ndados, de forma que possam ser exibidas e ocultadas através do botão de acionamento.\n\n> Quando utilizada, sobrepõe as funcionalidade básicas do *master-detail*.\n\nEm seu uso, deve-se utilizar como parâmetro a referência da _linha_ e/ou _índice_, sendo por padrão linha. Caso não seja declarado,\no componente não exibirá conteúdo.\n - Linha: `row` determina o item da linha corrente.\n - Índice: `rowIndex` determina o índice da linha corrente.\n\nEsta diretiva compõe-se de dois meios para uso, de forma explícita tal como em *syntax sugar*. Veja a seguir ambos, respectivamente:\n\n```\n...\n<po-table\n  [p-columns]=\"columns\"\n  [p-items]=\"items\">\n    <ng-template p-table-row-template let-rowItem let-i=\"rowIndex\" [p-table-row-template-show]=\"isShow\">\n      <detail-row [row]=\"rowItem\"></detail-row>\n    </ng-template>\n...\n```\n\n```\n...\n<po-table\n  [p-columns]=\"columns\"\n  [p-items]=\"items\">\n    <div *p-table-row-template=\"let rowItem, let i=rowIndex\">\n      <detail-row [row]=\"rowItem\"></detail-row>\n    </div>\n...\n\n```\n\nA diretiva **p-table-row-template**, possibilita também que determinada linha apresente ou não seu _template_. Para isto,\né necessário atribuir a referência da função que faz esta verificação, à propriedade `p-table-row-template-show`,\na mesma deve retornar um valor do tipo *boolean*. Veja o exemplo a seguir:\n\n```\n...\n@Component({\n   selector: 'app-root',\n   templateUrl: `\n     ...\n     <po-table\n       [p-columns]=\"columns\"\n       [p-items]=\"items\">\n         <ng-template p-table-row-template let-rowItem let-i=\"rowIndex\" [p-table-row-template-show]=\"isUndelivered\">\n           <detail-row [row]=\"rowItem\"> </detail-row>\n         </div>\n     ...\n   `\n})\nexport class AppComponent {\n   public dataTable = [{\n     code: 1200,\n     product: 'Rice',\n     costumer: 'Supermarket 1',\n     quantity: 3,\n     status: 'delivered',\n     license_plate: 'MDJD9191',\n     batch_product: 18041822,\n     driver: 'José Oliveira'\n   }, {\n     code: 1355,\n     product: 'Bean',\n     costumer: 'Supermarket 2',\n     quantity: 1,\n     status: 'transport',\n     license_plate: 'XXA5454',\n     batch_product: 18041821,\n     driver: 'Francisco Pereira'\n   }];\n\n   isUndelivered(row, index: number) {\n     return row.status !== 'delivered';\n   }\n}\n```\n> No exemplo acima, somente será disponibilizado os detalhes de informações nas linhas cujo o valor de `status`\nnão correspondam à *delivered*.","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-page-detail","types":["portinari-angular"],"type":"components","title":"Po Page Detail","module":"po-page-detail","path":"/projects/ui/src/lib/components/po-page/po-page-detail/po-page-detail.component.ts","preview":"O componente **po-page-detail** é utilizado como container principal para a tela de detalhamento de um registro.\nPor padrão possui 3 ações, cada ação na tela executa uma função no componente que está utilizando o po-page-detail,\nsão elas:\n - Voltar (função: back);\n - Editar (função: edit);\n - Remover (função: remove);\n\nCaso não estiver implementado alguma função, listado anteriormente, o mesmo não será apresentado. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-page-edit","types":["portinari-angular"],"type":"components","title":"Po Page Edit","module":"po-page-edit","path":"/projects/ui/src/lib/components/po-page/po-page-edit/po-page-edit.component.ts","preview":"O componente **po-page-edit** é utilizado como container principal para tela de edição ou adição de um\nregistro.\nPor padrão possui 3 ações, cada ação na tela executa uma função no componente que está utilizando o po-page-edit,\nsão elas:\n - Cancelar (função: cancel);\n - Salvar e Novo (função: saveNew);\n - Salvar (função: save);\n\nCaso não estiver implementado alguma função, listado anteriormente, o mesmo não será apresentado.\n\nOs botões \"Salvar\" e \"Salvar e Novo\" podem ser habilitados/desabilitados utilizando a propriedade p-disable-submit.\nEsta propriedade pode ser utilizada para desabilitar os botões caso exista um formulário inválido na página ou alguma\nregra de negócio não tenha sido atendida. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-page-list","types":["portinari-angular"],"type":"components","title":"Po Page List","module":"po-page-list","path":"/projects/ui/src/lib/components/po-page/po-page-list/po-page-list.component.ts","preview":"O componente `po-page-list` é utilizado como o container principal para as telas de listagem de dados,\npodendo ser apresentado como lista ou tabela.\n\nEste componente possibilita realizar filtro dos dados, no qual permite que seja atribuido uma função que será executada no momento\nda filtragem. Este comportamento pode ser acionado tanto ao *click* do ícone [po-icon-search](/guides/icons)\nquanto ao pressionar da tecla *ENTER* quando o foco estiver no campo de pesquisa.\n\nPara facilitar a manipulação e visualização dos filtros aplicados, é possível também utilizar o componente\n[`po-disclaimer-group`](/documentation/po-disclaimer-group). ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-popover","types":["portinari-angular"],"type":"components","title":"Po Popover","module":"po-popover","path":"/projects/ui/src/lib/components/po-popover/po-popover.component.ts","preview":"O componente `po-popover` é um container pequeno recomendado para incluir vários tipos de conteúdo como:\ngráficos, textos, imagens e inputs. Ele abre sobreposto aos outros componentes.\n\nPara mostrar apenas pequenos textos recomenda-se o uso da diretiva\n[**po-tooltip**](https://portinari.io/documentation/po-tooltip?view=doc).\n\nPara conteúdos maiores recomenda-se o uso do [**po-modal**](https://portinari.io/documentation/po-modal?view=doc).\n\nEle contém um título e também é possível escolher as posições do popover em relação ao componente pai,\nas posições permitidas são: `right`, `right-top`, `right-bottom`, `top`, `top-left`, `top-right`,\n`left`, `left-top`, `left-bottom`, `bottom`, `bottom-left` e `bottom-right`.\n\nTambém é possível escolher entre os dois eventos que podem abrir o *popover*.\nOs eventos permitidos são: `click` e `hover`. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-popup","types":["portinari-angular"],"type":"components","title":"Po Popup","module":"po-popup","path":"/projects/ui/src/lib/components/po-popup/po-popup.component.ts","preview":"O componente `po-popup` é um container pequeno recomendado para ações de navegação:\nEle abre sobreposto aos outros componentes.\n\nÉ possível escolher as posições do `po-popup` em relação ao componente alvo, para isto veja a propriedade `p-position`.\n\nTambém é possível informar um _template_ _header_ para o `po-popup`, que será exibido acima das ações.\nPara funcionar corretamente é preciso adicionar a propriedade `p-popup-header-template` no elemento que servirá de template, por exemplo:\n\n```\n<po-popup [p-target]=\"target\">\n  <div p-popup-header-template>\n    <div>\n      Dev Portinari\n    </div>\n    <div>\n      dev.portinari@portinari.com.br\n    </div>\n  </div>\n</po-popup >\n``` ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-progress","types":["portinari-angular"],"type":"components","title":"Po Progress","module":"po-progress","path":"/projects/ui/src/lib/components/po-progress/po-progress.component.ts","preview":"Componente de barra de progresso que possibilita exibir visualmente o progresso/carregamento de uma tarefa.\n\nEste componente pode ser utilizado no *upload* de arquivos, uma atualização no sistema ou o processamento de uma imagem. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-slide-content-template","types":["portinari-angular"],"type":"components","title":"Po Slide Content Template","module":"po-slide-content-template","path":"/projects/ui/src/lib/components/po-slide/directives/po-slide-content-template.directive.ts","preview":"Esta diretiva permite a customização de um slide.\n\nDeve-se utilizar como parâmetro a referência do item e/ou índice, sendo por padrão o item.\n - Item: `item` determina o item do slide corrente.\n - Índice: `index` determina o índice do slide corrente.\n\nEsta diretiva pode ser usada de duas formas: explícita ou *syntax sugar*. Veja a seguir ambos, respectivamente:\n\n```\n...\n<po-slide\n  [p-slides]=\"[{ id: 1, name: 'Register', email: 'register@portinari.com' }]\">\n\n  <ng-template p-slide-content-template let-item let-code=\"index\">\n    <div class=\"po-row\">\n      <po-info class=\"po-md-6\" p-label=\"Code\" [p-value]=\"item.id\"></po-info>\n      <po-info class=\"po-md-6\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\n    </div>\n  </ng-template>\n\n</po-slide>\n\n...\n```\n\n```\n...\n<po-slide\n   [p-slides]=\"[{ id: 1, name: 'Register', email: 'register@portinari.com' }]\">\n\n   <div *p-slide-content-template=\"let item, let i=index\" class=\"po-row\">\n     <po-info class=\"po-md-12\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\n   </div>\n</po-slide>\n...\n\n```","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-slide","types":["portinari-angular"],"type":"components","title":"Po Slide","module":"po-slide","path":"/projects/ui/src/lib/components/po-slide/po-slide.component.ts","preview":"Componente de slide para visualização e controle de elementos de forma cíclica. Exibe um conjunto de imagens ou dados que permitem\ncustomizar sua visualização utilizando a diretiva **[p-slide-content-template](/documentation/po-slide-content-template)**.\n\n#### Boas práticas:\n- Utilizar imagens no slide, mesmo quando possui conteúdo personalizado.\n- Evitar utilizar apenas um slide isolado, utilize pelo menos dois.\n- Evitar utilizar mais de 5 slides, pois a ideia do componente é destacar apenas informações importantes. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-stepper","types":["portinari-angular"],"type":"components","title":"Po Stepper","module":"po-stepper","path":"/projects/ui/src/lib/components/po-stepper/po-stepper.component.ts","preview":"O `po-stepper` permite que um processo seja dividido em passos para que o usuário o realize\nmais facilmente.\n\nExistem duas formas de utilização:\n\n1 - Usando o componente [**po-step**](/documentation/po-step) para renderizar e descrever os passos.\n\n2 - Através da propriedade `p-steps` para descrever os passos do processo, sendo responsabilidade do desenvolvedor o controle\nde renderização do que será exibido a cada *step* ativo.\n\nAtravés de suas propriedades, é possível definir se sua orientação será horizontal ou vertical,\nalém da possibilidade de aumentar o tamanho dos *steps*.\n\nTambém é possível navegar entre os *steps* através do teclado utilizando a tecla *tab* e, para ativar o *step* em foco basta\npressionar a tecla *enter*. Além disso, é possível ativar a exibição de ícones no lugar de números nos *steps* através da\npropriedade [`p-step-icons`](/documentation/po-stepper#stepIconsProperty).\n\n#### Utilizando os métodos do componente:\n\nPara acessar os métodos do componente é necessário ter a referência do mesmo.\n\nPor exemplo, utilizando um [**ViewChild**](https://angular.io/api/core/ViewChild):\n\n```\n@ViewChild(PoStepperComponent) poStepperComponent: PoStepperComponent;\n```\n\nE para acessar o método:\n\n```\npoStepperComponent.next();\n```\n\n#### Boas práticas\n\n- Evite `labels` extensos que quebram o layout do `po-stepper`, use `labels` diretos, curtos e intuitivos.\n- Utilize apenas um `po-stepper` por página. ","samplesThfWeb":[],"samplesThfMobile":[]},{"name":"po-step","types":["portinari-angular"],"type":"components","title":"Po Step","module":"po-step","path":"/projects/ui/src/lib/components/po-stepper/po-step/po-step.component.ts","preview":"O componente `po-step` é utilizado para envolver e renderizar o conteúdo de um passo (*step*) do `po-stepper`, por exemplo:\n\n```\n<po-stepper>\n\n   <po-step p-label=\"Endereço\">\n\n       <!-- Conteúdo referente ao endereço -->\n\n   </po-step>\n\n   <po-step p-label=\"Pagamento\">\n\n       <!-- Conteúdo referente ao pagamento -->\n\n   </po-step>\n\n </po-stepper>\n```\n\nA renderização do conteúdo envolvido na tela e o controle dos status são feitos automaticamente. No qual, o primeiro\n`po-step` encontrado será colocado como ativo, o próximo fica com o status *default* e os demais ficam\ndesabilitados (*disabled*).\n\nAo clicar no `po-step` que está com o status *default*, o que está ativo ficará com o\nstatus de concluído (*done*) e o próximo que estava desabilitado ficará com o status *default* e o restante permanecerá\ncom o status desabilitado.\n\n> Ao utilizar o `po-step`, o componente `po-stepper` funcionará de forma sequencial, ou seja, não será possível\npular para outro `po-step` que esteja com o status igual a desabilitado (*disabled*).\n\nAcesse a [documentação do `po-stepper`](/documentation/po-stepper) para ter mais informações sobre o seu funcionamento\ne exemplos de uso.","samplesThfWeb":[],"samplesThfMobile":[]}]